ul,ol{
  list-style:none;
}
*{margin: 0;padding:0;}
.icon {
  width: 1em; height: 1em;
  vertical-align: -0.15em;
  fill: currentColor;
  overflow: hidden;
}

#xxx{
  background:white;
  display:block;
  position: fixed;
  left:0;
  top: 0;
}
/*canvas默认的display是inline-block，改成block之后对其宽高并没有改变，因为canvas类似于img的性质，不会因你改动了display就随之拉伸。*/
/*因此需指定其width和height*/
/*指定width和height之后，用height:100vh;之后，由于其是等比例缩放，所以width也会相应增大，会出现一些bug，所以不建议用css控制canvas的初始宽高*/
/*如果height用100vh，width用100vw，能扩展到Output整个页面，但是坐标都会放大，所以不可行，不能用css定义宽高*/
/*这里加position最终解决了移动端手指上下拨动时页面滚动的问题*/

body{
  /*border:1px solid red;*/
  overflow: hidden;
  /*解决移动端手指上下拨动时页面滚动的问题，但没用，所以还得在JS内解决*/
}
/*html{
  border:1px solid black;
}*/
.actions{
  position:fixed;
  left:0;
  top:0;
  margin: 20px;
}
.actions svg{
  width:1.5em;
  height:1.5em;
  transition: all 0.3s;
  margin: 0 10px;
}
.actions svg.active{
  fill:red;
  transform: scale(1.2);
}
/*若此svg处于激活状态，active是我们在JS里增加的类*/
/*注意，svg与.active之间不能加空格*/
/*大小变为原来的1.2倍*/
/*变大小之后空间不够了，在.actions加margin/padding使其有变大的空间*/
/*transition加过渡时间*/

.colors{
  position:fixed;
  top:50px;
  left:28px;
}
.colors>li{
  width:20px;
  height: 20px;
  border-radius: 50%;
  /*变成圆圈*/
  margin: 10px 0;
  box-shadow:0 0 3px rgba(0,0,0,0.25);
  /*这一句具体什么意思？*/
  transition: all 0.3s;
}
.colors>li.black{
  background:black;
}
.colors>li.green{
  background: green;
}
.colors>li.yellow{
  background: yellow;
}
.colors>li.red{
  background: red;
}
.colors>li.active{
  box-shadow:0 0 3px rgba(0,0,0,0.95);
  transform: scale(1.2);
}
.sizes{
  position: fixed;
  right: 20px;
  top: 10px;
}
.sizes>li{
  margin: 20px 0;
}
.sizes>.thin{
  height: 0;
  width: 20px;
  border-top: 3px solid black;
}
.sizes>.thick{
  height: 0;
  width: 20px;
  border-top: 6px solid black;
}